# Generated by Django 2.1.1 on 2019-01-23 12:48

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import iris_masters.models


class Migration(migrations.Migration):

    dependencies = [
        ('themes', '0021_auto_20190122_1151'),
        ('iris_masters', '0011_auto_20190123_1348'),
        ('record_cards', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Applicant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', iris_masters.models.UserIdField(max_length=20, verbose_name='User ID')),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='Creation date')),
                ('updated_at', models.DateField(auto_now=True, verbose_name='Last update')),
                ('flag_ca', models.BooleanField(default=True, verbose_name='Flag CA')),
                ('enabled', models.BooleanField(default=True, verbose_name='Enabled')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ApplicantResponse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', iris_masters.models.UserIdField(max_length=20, verbose_name='User ID')),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='Creation date')),
                ('updated_at', models.DateField(auto_now=True, verbose_name='Last update')),
                ('treatment', models.BooleanField(default=True, verbose_name='Treatment')),
                ('language', models.BooleanField(default=True, verbose_name='Language')),
                ('phone_number', models.CharField(blank=True, max_length=30, verbose_name='Phone Number')),
                ('mobile_number', models.CharField(max_length=30, unique=True, verbose_name='Mobile Number')),
                ('email', models.EmailField(max_length=30, unique=True, verbose_name='Email')),
                ('street_type', models.CharField(max_length=60, verbose_name='Street Type')),
                ('street', models.CharField(max_length=300, verbose_name='Street')),
                ('number', models.CharField(max_length=60, verbose_name='Number')),
                ('floor', models.CharField(blank=True, max_length=20, verbose_name='Floor')),
                ('door', models.CharField(blank=True, max_length=20, verbose_name='Door')),
                ('scale', models.CharField(blank=True, max_length=20, verbose_name='Scale')),
                ('postal_code', models.CharField(max_length=10, verbose_name='Postal Code')),
                ('municipality', models.CharField(max_length=150, verbose_name='Municipality')),
                ('province', models.CharField(max_length=150, verbose_name='Province')),
                ('enabled', models.BooleanField(default=True, verbose_name='Enabled')),
                ('authorization', models.BooleanField(default=False, verbose_name='Authorization')),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='record_cards.Applicant', verbose_name='Applicant')),
                ('response_channel', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='iris_masters.ResponseChannel')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Citizen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', iris_masters.models.UserIdField(max_length=20, verbose_name='User ID')),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='Creation date')),
                ('updated_at', models.DateField(auto_now=True, verbose_name='Last update')),
                ('name', models.CharField(max_length=60, verbose_name='Name')),
                ('first_surname', models.CharField(max_length=60, verbose_name='First Surname')),
                ('second_surname', models.CharField(blank=True, max_length=60, verbose_name='Second Surname')),
                ('full_normalized_name', models.CharField(blank=True, max_length=120, verbose_name='Full normal name')),
                ('normalized_name', models.CharField(blank=True, max_length=60, verbose_name='Normalized Name')),
                ('normalized_first_surname', models.CharField(blank=True, max_length=60, verbose_name='Normalized First Surname')),
                ('normalized_second_surname', models.CharField(blank=True, max_length=60, verbose_name='Normalized Second Surname')),
                ('dni', models.CharField(max_length=15, unique=True, verbose_name='DNI')),
                ('birth_year', models.SmallIntegerField(validators=[django.core.validators.MinValueValidator(1900)], verbose_name='Birth Year')),
                ('response', models.BooleanField(default=False, verbose_name='Response')),
                ('enabled', models.BooleanField(default=True, verbose_name='Enabled')),
                ('district', models.CharField(blank=True, max_length=80, verbose_name='District')),
                ('doc_type', models.BooleanField(default=True, verbose_name='Document Type')),
                ('mib_code', models.PositiveIntegerField(verbose_name='MIB Code')),
                ('blocked', models.BooleanField(default=False, verbose_name='Blocked')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RecordCard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', iris_masters.models.UserIdField(max_length=20, verbose_name='User ID')),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='Creation date')),
                ('updated_at', models.DateField(auto_now=True, verbose_name='Last update')),
                ('description', models.TextField(verbose_name='Description')),
                ('description_es', models.TextField(null=True, verbose_name='Description')),
                ('description_ca', models.TextField(null=True, verbose_name='Description')),
                ('description_en', models.TextField(null=True, verbose_name='Description')),
                ('responsible_profile', iris_masters.models.UserIdField(max_length=20, verbose_name='User ID')),
                ('process', models.PositiveIntegerField(verbose_name='Process')),
                ('enabled', models.BooleanField(default=True, verbose_name='Enabled')),
                ('mayorship', models.BooleanField(default=False, verbose_name='Mayorship')),
                ('normalized_record_id', models.CharField(max_length=20, verbose_name='Normalized Record Id')),
                ('alarm', models.BooleanField(default=False, verbose_name='Alarm')),
                ('auxiliary', models.CharField(blank=True, max_length=40, verbose_name='Auxiliary')),
                ('auxiliary_es', models.CharField(blank=True, max_length=40, null=True, verbose_name='Auxiliary')),
                ('auxiliary_ca', models.CharField(blank=True, max_length=40, null=True, verbose_name='Auxiliary')),
                ('auxiliary_en', models.CharField(blank=True, max_length=40, null=True, verbose_name='Auxiliary')),
                ('closing_date', models.DateField(verbose_name='Closing date')),
                ('ans_overcome', models.PositiveIntegerField(default=0, verbose_name='ANS overcome')),
                ('communication_media_date', models.DateField(verbose_name='Communication Media Date')),
                ('communication_media_detail', models.CharField(blank=True, max_length=100, verbose_name='Communication Media Detail')),
                ('communication_media_detail_es', models.CharField(blank=True, max_length=100, null=True, verbose_name='Communication Media Detail')),
                ('communication_media_detail_ca', models.CharField(blank=True, max_length=100, null=True, verbose_name='Communication Media Detail')),
                ('communication_media_detail_en', models.CharField(blank=True, max_length=100, null=True, verbose_name='Communication Media Detail')),
                ('record_parent_claimed', models.CharField(blank=True, max_length=30, verbose_name='Record Parent Claimed')),
                ('reassignment_not_allowed', models.BooleanField(default=False, verbose_name='Reassignment not Allowed')),
                ('urgent', models.BooleanField(default=False, verbose_name='Urgent')),
                ('page_origin', models.CharField(blank=True, max_length=100, verbose_name='Page origin')),
                ('email_external_derivation', models.EmailField(max_length=254, verbose_name='Email external derivation')),
                ('user_displayed', models.CharField(max_length=20, verbose_name='User displayed')),
                ('historicized', models.CharField(default='N', max_length=3, verbose_name='Historicized')),
                ('allow_multiderivation', models.BooleanField(default=True, verbose_name='Allow Multiderivation')),
                ('start_date_process', models.DateField(verbose_name='Start Date Process')),
                ('similar_process', models.BooleanField(default=False, verbose_name='Similar process')),
                ('response_state', models.CharField(blank=True, max_length=40, verbose_name='Response State')),
                ('notify_quality', models.PositiveIntegerField(verbose_name='Notify quality')),
                ('create_profile', models.PositiveIntegerField(verbose_name='Create profile')),
                ('multi_complaint', models.PositiveIntegerField(verbose_name='Multi complaint')),
                ('lopd', models.NullBooleanField(verbose_name='LOPD')),
                ('citizen_alarm', models.BooleanField(default=False, verbose_name='Citizen alarm')),
                ('ci_date', models.DateField(verbose_name='CI Date')),
                ('support_numbers', models.PositiveIntegerField(default=0, verbose_name='Support Numbers')),
                ('applicant_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='iris_masters.ApplicantType', verbose_name='Applicant Type')),
                ('communication_media', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='iris_masters.CommunicationMedia', verbose_name='Communication Media')),
                ('element_detail', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='themes.ElementDetail', verbose_name='Element Detail')),
                ('input_channel', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='iris_masters.InputChannel')),
                ('record_state', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='iris_masters.RecordState', verbose_name='Record State')),
                ('record_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='iris_masters.RecordType', verbose_name='Record Type')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', iris_masters.models.UserIdField(max_length=20, verbose_name='User ID')),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='Creation date')),
                ('updated_at', models.DateField(auto_now=True, verbose_name='Last update')),
                ('enabled', models.BooleanField(default=True, verbose_name='Enabled')),
                ('normalized_id', models.CharField(blank=True, max_length=60, verbose_name='Normalized ID')),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='record_cards.Applicant', verbose_name='Applicant')),
                ('applicant_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='iris_masters.ApplicantType', verbose_name='Applicant Type')),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='iris_masters.Application', verbose_name='Application')),
                ('communication_media', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='iris_masters.CommunicationMedia', verbose_name='Communication Media')),
                ('input_channel', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='iris_masters.InputChannel', verbose_name='Input Channel')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SocialEntity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', iris_masters.models.UserIdField(max_length=20, verbose_name='User ID')),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='Creation date')),
                ('updated_at', models.DateField(auto_now=True, verbose_name='Last update')),
                ('social_reason', models.CharField(max_length=60, verbose_name='Social Reason')),
                ('normal_social_reason', models.CharField(blank=True, max_length=60, verbose_name='Normal Social Reason')),
                ('contact', models.CharField(max_length=120, verbose_name='Contact')),
                ('cif', models.CharField(max_length=15, unique=True, verbose_name='CIF')),
                ('response', models.BooleanField(default=False, verbose_name='Response')),
                ('enabled', models.BooleanField(default=True, verbose_name='Enabled')),
                ('district', models.CharField(blank=True, max_length=80, verbose_name='District')),
                ('mib_code', models.PositiveIntegerField(verbose_name='MIB Code')),
                ('blocked', models.BooleanField(default=False, verbose_name='Blocked')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='recordcard',
            name='request',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='record_cards.Request', verbose_name='Request'),
        ),
        migrations.AddField(
            model_name='recordcard',
            name='support',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='iris_masters.Support'),
        ),
        migrations.AddField(
            model_name='recordcard',
            name='ubication',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='record_cards.Ubication', verbose_name='Ubication'),
        ),
        migrations.AddField(
            model_name='applicant',
            name='citizen',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='record_cards.Citizen', verbose_name='Citizen'),
        ),
        migrations.AddField(
            model_name='applicant',
            name='social_entity',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='record_cards.SocialEntity', verbose_name='Social Entity'),
        ),
    ]
