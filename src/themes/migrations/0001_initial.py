# Generated by Django 2.1.1 on 2018-10-29 11:07

from django.db import migrations, models
import django.db.models.deletion
import iris_masters.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('features', '0001_initial'),
        ('iris_masters', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', iris_masters.models.UserIdField(max_length=20, verbose_name='User ID')),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='Creation date')),
                ('updated_at', models.DateField(auto_now=True, verbose_name='Last update')),
                ('description', models.CharField(max_length=80, unique=True, verbose_name='Description')),
                ('description_es', models.CharField(max_length=80, null=True, unique=True, verbose_name='Description')),
                ('description_ca', models.CharField(max_length=80, null=True, unique=True, verbose_name='Description')),
                ('description_en', models.CharField(max_length=80, null=True, unique=True, verbose_name='Description')),
                ('area_code', models.CharField(max_length=20, unique=True, verbose_name='Area Code')),
                ('order', models.PositiveIntegerField()),
                ('query_area', models.BooleanField(default=False, verbose_name='Query Area')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Derivation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='DistrictDerivation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('derivation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='themes.Derivation')),
                ('to_profile', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='features.Feature')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Element',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', iris_masters.models.UserIdField(max_length=20, verbose_name='User ID')),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='Creation date')),
                ('updated_at', models.DateField(auto_now=True, verbose_name='Last update')),
                ('description', models.CharField(max_length=80)),
                ('description_es', models.CharField(max_length=80, null=True)),
                ('description_ca', models.CharField(max_length=80, null=True)),
                ('description_en', models.CharField(max_length=80, null=True)),
                ('alternative_text', models.CharField(max_length=600)),
                ('alternative_text_es', models.CharField(max_length=600, null=True)),
                ('alternative_text_ca', models.CharField(max_length=600, null=True)),
                ('alternative_text_en', models.CharField(max_length=600, null=True)),
                ('element_code', models.CharField(max_length=36, unique=True, verbose_name='Element Code')),
                ('order', models.PositiveIntegerField()),
                ('is_favorite', models.BooleanField(default=False, verbose_name='Favorite')),
                ('icon_name', models.CharField(max_length=50, verbose_name='Icon Name')),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='themes.Area')),
            ],
        ),
        migrations.CreateModel(
            name='ElementDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', iris_masters.models.UserIdField(max_length=20, verbose_name='User ID')),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='Creation date')),
                ('updated_at', models.DateField(auto_now=True, verbose_name='Last update')),
                ('name', models.CharField(help_text='Detail description in Catalan.', max_length=40)),
                ('element_code', models.CharField(max_length=36, unique=True, verbose_name='Detail code')),
                ('order', models.PositiveIntegerField()),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Deletion date', null=True)),
                ('short_description', models.CharField(blank=True, max_length=80)),
                ('short_description_es', models.CharField(blank=True, max_length=80, null=True)),
                ('short_description_ca', models.CharField(blank=True, max_length=80, null=True)),
                ('short_description_en', models.CharField(blank=True, max_length=80, null=True)),
                ('description', models.TextField()),
                ('description_es', models.TextField(null=True)),
                ('description_ca', models.TextField(null=True)),
                ('description_en', models.TextField(null=True)),
                ('pda_description', models.CharField(help_text='Description shown on PDA', max_length=80)),
                ('app_description', models.CharField(help_text='Description shown on APP', max_length=80)),
                ('rat_code', models.CharField(blank=True, max_length=90)),
                ('similarity_hours', models.PositiveSmallIntegerField(help_text='Maximum time, expressed in hours, between the creation time of two record cards for considering them similar')),
                ('similarity_meters', models.PositiveIntegerField(help_text='Maximum distance, expressed in meters, between the ubications of two record cards for considering them similar.')),
                ('app_resolution_radius_meters', models.PositiveIntegerField(help_text='Maximum distance starting from the record card ubication, expressed in meters, in which an operator can resolve the task using the IRIS smartphone app.')),
                ('sla_hours', models.PositiveSmallIntegerField(help_text='Maximum hours in which the town council commits to resolve an issues belonging this theme.')),
                ('autovalidate_records', models.BooleanField(default=False, help_text='If checked, the record cards will be validated automatically on its creation.', verbose_name='Autovalidate records')),
                ('requires_citizen', models.BooleanField(default=False, help_text='If checked, the citizen data will be required for creating a record card.', verbose_name='Requires Citizen')),
                ('requires_ubication', models.BooleanField(default=False, help_text='If checked, an ubication will be required for creating a record card.', verbose_name='Requires Ubication')),
                ('aggrupation_first', models.BooleanField(default=False, help_text='If checked, the aggrupation data will be selected as default on the website.', verbose_name='Aggrupation first')),
                ('immediate_response', models.BooleanField(default=False, help_text='If checked, the response to the record will be required on its creation', verbose_name='Immediate response')),
                ('first_instance_response', models.BooleanField(default=False, help_text='If checked, a first instance response will be given for the record cards belonging to this theme.', verbose_name='First instance response')),
                ('requires_appointment', models.BooleanField(default=False, help_text='If checked, an appointment will be required for creating records for this theme.', verbose_name='Requires Appointment')),
                ('allow_resolution_change', models.BooleanField(default=False, help_text='If checked, the records belonging to this theme could change its theme on resolution.', verbose_name='Allow theme change on resolution')),
                ('validated_reassignable', models.BooleanField(default=True, help_text='If checked, the record could be reassigned even if validated.', verbose_name='Allow reassignment even if validated')),
                ('sla_allows_claims', models.BooleanField(default=False, help_text='If checked, claims could be created on the SLA time.', verbose_name='Allow claims on SLA time')),
                ('is_external', models.BooleanField(default=False, help_text='If true, the record cards of this theme must be created by external systems.', verbose_name='Created by external system')),
                ('visibility', iris_masters.models.VisibilityOptionField(choices=[('p', 'Visible for all the profiles'), ('r', "Visible for the profiles responsible for the theme's area"), ('c', "Visible for the profiles responsible for the theme's area and a set of profiles for a concrete areas")], max_length=1, verbose_name='Visibility options')),
                ('validation_place_days', models.PositiveSmallIntegerField(help_text='Max number of days for validating a record card, modify the theme or reassign outside its environment.')),
                ('published_at', models.DateField(blank=True, null=True, verbose_name='Publication date')),
                ('external_protocol_id', models.CharField(help_text='Itaca ID for the desired protocol.', max_length=48, verbose_name='Protocol ID')),
                ('email_template', models.TextField(blank=True)),
                ('email_template_es', models.TextField(blank=True, null=True)),
                ('email_template_ca', models.TextField(blank=True, null=True)),
                ('email_template_en', models.TextField(blank=True, null=True)),
                ('sms_template', models.CharField(blank=True, max_length=480)),
                ('sms_template_es', models.CharField(blank=True, max_length=480, null=True)),
                ('sms_template_ca', models.CharField(blank=True, max_length=480, null=True)),
                ('sms_template_en', models.CharField(blank=True, max_length=480, null=True)),
                ('allows_open_data', models.BooleanField(default=False, help_text='Records from this theme could be shown on Open Data portal.', verbose_name='Show on Open Data')),
                ('allows_open_data_location', models.BooleanField(default=False, help_text='Records will shown its location on Open Data portal.', verbose_name='Location on Open Data')),
                ('allows_open_data_sensible_location', models.BooleanField(default=False, help_text='Records will shown sensible locations on Open Data portal.', verbose_name='Sensible Location on Open Data (Only census section)')),
                ('allows_ssi', models.BooleanField(default=False, help_text='Records from this theme could be shown on SSI.', verbose_name='Show on SSI')),
                ('allows_ssi_location', models.BooleanField(default=False, help_text='Records will shown its location on SSI.', verbose_name='Location on Open Data')),
                ('allows_ssi_sensible_location', models.BooleanField(default=False, help_text='Records will shown sensible locations on SSI.', verbose_name='Sensible Location on SSI (Only census section)')),
                ('head_text', models.TextField(verbose_name='Head text')),
                ('head_text_es', models.TextField(null=True, verbose_name='Head text')),
                ('head_text_ca', models.TextField(null=True, verbose_name='Head text')),
                ('head_text_en', models.TextField(null=True, verbose_name='Head text')),
                ('footer_text', models.TextField(verbose_name='Footer text')),
                ('footer_text_es', models.TextField(null=True, verbose_name='Footer text')),
                ('footer_text_ca', models.TextField(null=True, verbose_name='Footer text')),
                ('footer_text_en', models.TextField(null=True, verbose_name='Footer text')),
                ('links', models.TextField(verbose_name='Links')),
                ('links_es', models.TextField(null=True, verbose_name='Links')),
                ('links_ca', models.TextField(null=True, verbose_name='Links')),
                ('links_en', models.TextField(null=True, verbose_name='Links')),
                ('lopd', models.TextField(verbose_name='LOPD')),
                ('lopd_es', models.TextField(null=True, verbose_name='LOPD')),
                ('lopd_ca', models.TextField(null=True, verbose_name='LOPD')),
                ('lopd_en', models.TextField(null=True, verbose_name='LOPD')),
            ],
        ),
        migrations.CreateModel(
            name='ElementDetailApplication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('favourite', models.BooleanField(default=False)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='iris_masters.ExternalApplication')),
                ('element_detail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='application_configs', to='themes.ElementDetail')),
            ],
        ),
        migrations.CreateModel(
            name='ElementDetailFeature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_special', models.BooleanField(default=False)),
                ('is_mandatory', models.BooleanField(default=False)),
                ('element_detail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feature_configs', to='themes.ElementDetail')),
                ('feature', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='element_configs', to='features.Feature')),
            ],
        ),
        migrations.CreateModel(
            name='IndustrialStateDerivation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('derivation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='themes.Derivation')),
                ('to_profile', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='features.Feature')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProfileDerivation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('derivation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='themes.Derivation')),
                ('to_profile', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='features.Feature')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProtocolDerivation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('derivation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='themes.Derivation')),
                ('to_profile', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='features.Feature')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ThemeGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', iris_masters.models.UserIdField(max_length=20, verbose_name='User ID')),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='Creation date')),
                ('updated_at', models.DateField(auto_now=True, verbose_name='Last update')),
                ('description', models.CharField(max_length=60)),
                ('position', models.PositiveSmallIntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='elementdetail',
            name='applications',
            field=models.ManyToManyField(through='themes.ElementDetailApplication', to='iris_masters.ExternalApplication'),
        ),
        migrations.AddField(
            model_name='elementdetail',
            name='element',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='themes.Element'),
        ),
        migrations.AddField(
            model_name='elementdetail',
            name='features',
            field=models.ManyToManyField(through='themes.ElementDetailFeature', to='features.Feature'),
        ),
        migrations.AddField(
            model_name='elementdetail',
            name='groups',
            field=models.ManyToManyField(blank=True, to='themes.ThemeGroup'),
        ),
        migrations.AddField(
            model_name='elementdetail',
            name='record_type',
            field=models.ForeignKey(help_text='Limit this detail to records of this type.', on_delete=django.db.models.deletion.PROTECT, to='iris_masters.RecordType', verbose_name='Record type'),
        ),
        migrations.AddField(
            model_name='elementdetail',
            name='response_channels',
            field=models.ManyToManyField(to='iris_masters.ResponseChannel'),
        ),
        migrations.AddField(
            model_name='derivation',
            name='element_detail',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='themes.ElementDetail'),
        ),
        migrations.AlterUniqueTogether(
            name='elementdetail',
            unique_together={('element', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='element',
            unique_together={('area', 'description')},
        ),
    ]
