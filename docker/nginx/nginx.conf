user root;
worker_processes 1;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    server_names_hash_bucket_size 96;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    server_tokens off;

    client_max_body_size 16m;

    send_timeout 360;
    client_body_timeout   360;
    client_header_timeout 360;

    keepalive_timeout  30;

    server_name_in_redirect off;
    port_in_redirect off;

    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 3;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript;

    log_format  timed_combined  '$remote_addr [$time_local] "$request" '
                                '$status $body_bytes_sent "$http_referer" '
                                '$request_time  $upstream_response_time';
    access_log  /var/log/nginx/access.log timed_combined;

    real_ip_header X-Forwarded-For;
    set_real_ip_from 10.0.0.0/8;
    set_real_ip_from 172.16.0.0/12;
    set_real_ip_from 192.168.0.0/16;

    include proxy_params;

    root /data;

    upstream backend {
        server 127.0.0.1:8000;
    }

    server {
        listen 8888 default_server;
        server_name localhost;
        access_log off;
        include uwsgi_params;

        location /nginx/healthz {
            add_header Content-Type text/plain;
            return 200 "nginx running";
            access_log off;
        }
        location /healthz {
            add_header Content-Type text/plain;
            return 200 "nginx running";
            access_log off;
        }
    }

    server {
        listen 80 default_server;
        server_name localhost;
        access_log off;
        include uwsgi_params;

        location /nginx/healthz {
            add_header Content-Type text/plain;
            return 200 "nginx running";
            access_log off;
        }
        location /healthz {
            add_header Content-Type text/plain;
            return 200 "nginx running";
            access_log off;
        }
        location /nginx/status {
            stub_status on;
            access_log off;
        }
    }

    #ENABLE_3W_REDIRECT # Unified www enforcer http://stackoverflow.com/a/28610978
    #ENABLE_3W_REDIRECT server {
    #ENABLE_3W_REDIRECT     listen 8080;
    #ENABLE_3W_REDIRECT     # allow also the m.x.com domain
    #ENABLE_3W_REDIRECT     server_name ~^(?!www\.)(?<domain>\w+.+)$;
    #ENABLE_3W_REDIRECT     access_log off;
    #ENABLE_3W_REDIRECT     location / {
    #ENABLE_3W_REDIRECT         return 301 $scheme://www.$domain$request_uri;
    #ENABLE_3W_REDIRECT     }
    #ENABLE_3W_REDIRECT     location /nginx/healthz {
    #ENABLE_3W_REDIRECT         add_header Content-Type text/plain;
    #ENABLE_3W_REDIRECT         return 200 "nginx running";
    #ENABLE_3W_REDIRECT         access_log off;
    #ENABLE_3W_REDIRECT     }
    #ENABLE_3W_REDIRECT }

    server {
        listen 8000 default_server;

        # to avoid attacks
        location ~ /\.php { deny  all; access_log off; error_log off; }
        location ~ /\.ht { deny  all; access_log off; error_log off; }
        location ~ /\.hg { deny  all; access_log off; error_log off; }
        location ~ /\.svn { deny  all; access_log off; error_log off; }
        location ~ /autodiscover { deny  all; access_log off; error_log off; }

        location /nginx/healthz {
            add_header Content-Type text/plain;
            return 200 "nginx running";
            access_log off;
        }
        location /healthz {
            add_header Content-Type text/plain;
            return 200 "nginx running";
            access_log off;
        }
        location /health/ {
            add_header Content-Type text/plain;
            uwsgi_pass backend;
            access_log off;
        }
        location /metrics {
            deny  all;
            access_log off;
            error_log off;
        }
        location ~* ^/static/ {
            add_header Cache-Control "public";
            access_log off;
            expires max;
        }
        location ~* ^/services/iris/static/ {
            # /services/iris/static/admin/css/base.css
            # â†’ /data/static/services/iris/static/admin/css/base.css
            # STATIC_ROOT = '/data/static'
            # container: /data
            #root /data/static;
            add_header Cache-Control "public";
            access_log off;
            expires max;
        }

        location / {
            #ENABLE_BASIC_AUTH auth_basic "Restricted";
            #ENABLE_BASIC_AUTH auth_basic_user_file /etc/nginx/htpasswd;

            #ENABLE_HTTPS_REDIRECT if ($http_x_forwarded_proto = "http") {
            #ENABLE_HTTPS_REDIRECT     rewrite ^(.*)$ https://$http_host$request_uri permanent;
            #ENABLE_HTTPS_REDIRECT }

            include /etc/nginx/uwsgi_params;
            proxy_pass http://backend;
        }
    }
}
